/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.vistas;

import inventory.acceso.AccesoExcepciones;
import inventory.acceso.AccesoProducto;
import inventory.objetos.ObjetosProducto;
import inventory.servicios.ServicioLeerArchivoExcel;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Megabyte Soluciones Integrales Guatemala
 */
public class wdwBaseDeDatosImportarCatalogoDeProductos extends javax.swing.JInternalFrame {

    /**
     * Creates new form wdwBaseDeDatosImportarCatalogoDeProductos
     */
    public wdwBaseDeDatosImportarCatalogoDeProductos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatosExcel = new javax.swing.JTable();
        btnSeleccionarArchivo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Importar Catalogo de Productos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/exportar.png"))); // NOI18N

        tblDatosExcel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Producto", "ID Proveedor", "Marca", "Descripcion", "Precio Compra", "% Estandar", "Precio Estandar", "% Minimo", "Precio MInimo", "Existencia", "Unidad Medida", "Maximo", "Minimo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDatosExcel);
        tblDatosExcel.getColumnModel().getColumn(6).setResizable(false);
        tblDatosExcel.getColumnModel().getColumn(9).setResizable(false);

        btnSeleccionarArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/csv.png"))); // NOI18N
        btnSeleccionarArchivo.setText("Seleccionar Archivo CSV");
        btnSeleccionarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarArchivoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/guardar.png"))); // NOI18N
        btnGuardar.setText("Guardar Registros");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSeleccionarArchivo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccionarArchivo)
                    .addComponent(btnGuardar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnSeleccionarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarArchivoActionPerformed
       
        DefaultTableModel tabla_productos;
        ArrayList lista_productos = new ArrayList();
        AccesoExcepciones Mensaje = new AccesoExcepciones();

        JFileChooser flcArchivo = new JFileChooser(".");
        int estado = flcArchivo.showOpenDialog(null);

        if (estado == JFileChooser.APPROVE_OPTION) {

            File archivo_seleccionado = flcArchivo.getSelectedFile();
            ServicioLeerArchivoExcel LeerArchivoExcel = new ServicioLeerArchivoExcel();
            String direccion = archivo_seleccionado.getParent()+"\\"+archivo_seleccionado.getName();
            
            lista_productos = LeerArchivoExcel.leer_archivo_excel(direccion);
            Iterator reiterador=lista_productos.iterator();
            
            try{
                
                Object datos[] = new Object [13];
                AccesoProducto ActualizarProducto = new AccesoProducto();
                tabla_productos = (DefaultTableModel) tblDatosExcel.getModel();
                
                System.out.println("Entro "+direccion+" ");
                
                for (int i = tblDatosExcel.getRowCount() - 1; i>=0; i--){
                    tabla_productos.removeRow(i);
                } 
                
                while(reiterador.hasNext()){
                    ObjetosProducto Producto;
                    Producto = (ObjetosProducto) reiterador.next();
                    datos[0] = Producto.getId_producto();
                    datos[1] = Producto.getId_proveedor();
                    datos[2] = Producto.getMarca_producto();
                    datos[3] = Producto.getDesc_producto();
                    datos[4] = Producto.getPrecio_compra_producto();
                    datos[5] = Producto.getPrj_est_producto();
                    datos[6] = Producto.getPrecio_est_producto();
                    datos[7] = Producto.getPrj_min_producto();
                    datos[8] = Producto.getPrecio_min_producto();
                    datos[9] = Producto.getExi_producto();
                    datos[10]= Producto.getUnidad_medida_producto();
                    datos[11]= Producto.getMaximo_producto();
                    datos[12]= Producto.getMinimo_producto();
                    
                    try{
                        ActualizarProducto.actualizarProducto(Producto);
                        tabla_productos.addRow(datos);
                    }catch(Exception error){
                        Mensaje.manipulacionExcepciones("critico", "No se pudo actualizar el ID : "+Producto.getId_producto()+" -> "+error);
                    }

                }
                
            } catch(Exception e){

            }

        } else if (estado == JFileChooser.CANCEL_OPTION) {
            System.out.println("SE HA CANCELADO LA OPERACION");
        }
    }//GEN-LAST:event_btnSeleccionarArchivoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
        ObjetosProducto Producto = new ObjetosProducto();
        AccesoProducto NuevoProducto = new AccesoProducto();
        AccesoExcepciones Mensaje = new AccesoExcepciones();
        
       //ALMACENAR LA INFORMACION DE CADA PRODUCTO EN LA BASE DE DATOS
        try{
            for(int cFila = 0; cFila<tblDatosExcel.getRowCount(); cFila++){
                Producto.setId_producto(tblDatosExcel.getValueAt(cFila, 0).toString());
                Producto.setId_provedor(Integer.parseInt(tblDatosExcel.getValueAt(cFila, 1).toString()));
                Producto.setMarca_producto(tblDatosExcel.getValueAt(cFila, 2).toString());
                Producto.setDesc_producto(tblDatosExcel.getValueAt(cFila, 3).toString());
                Producto.setPrecio_compra_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 4).toString()));
                Producto.setPrj_est_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 5).toString()));
                Producto.setPrecio_est_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 6).toString()));
                Producto.setPrj_min_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 7).toString()));
                Producto.setPrecio_min_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 8).toString()));
                Producto.setExi_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 9).toString()));
                Producto.setUnidad_medida_producto(tblDatosExcel.getValueAt(cFila, 10).toString());
                Producto.setMaximo_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 11).toString()));
                Producto.setMinimo_producto(Float.parseFloat(tblDatosExcel.getValueAt(cFila, 12).toString()));
                //ACTUALIZAR LA INFORMACION DE PRODUCTO
                try{
                    NuevoProducto.actualizarProducto(Producto);
                }catch(Exception error){
                    System.out.println("OCURRIO ESTE ERROR EN LA FIALA: "+cFila+" POR ESTE MOTIVO -> "+error);
                    Mensaje.manipulacionExcepciones("critico", "Error al actualizar la fila "+cFila);
                }
            } 
            
            Mensaje.manipulacionExcepciones("informacion", "La Base de Datos fue Actualizada con Exito");
        }catch(Exception error){
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al actualizar los datos -> "+error);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSeleccionarArchivo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDatosExcel;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.vistas;

import inventory.acceso.AccesoAnulacionFacturas;
import inventory.acceso.AccesoExcepciones;
import inventory.objetos.ObjetosAnulacionFacturas;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Megabyte Soluciones Integrales Guatemala
 */


public class wdwMovimientoAnulacionFacturas extends javax.swing.JInternalFrame {

    //VARIABLES GLOBALES
    AccesoExcepciones Mensaje = new AccesoExcepciones();
    String vFechaVenta = "";
    String vTotal = "";
    String vIdVenta = "";
    
    /**
     * Creates new form wdwBaseDeDAtosHistorialDeVentas
     */
    public wdwMovimientoAnulacionFacturas() {
        initComponents();
    }
    
    private boolean verificarDatosEntrada(){
       
        boolean vDatosCorrectos = true;
       
        if(txtIdEnvio.getText().isEmpty()){
            Mensaje.manipulacionExcepciones("critico", "Ingrese el numero del envio asociado a la factura");
            vDatosCorrectos = false;
        }
        
        return vDatosCorrectos;
    }       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    //VARIABLES GLOBALES
    AccesoAnulacionFacturas facturaAnulada = new AccesoAnulacionFacturas();
    AccesoExcepciones mensaje = new AccesoExcepciones();
    ArrayList<ObjetosAnulacionFacturas> listaFacturas = new ArrayList();
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDetalle = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        pnlBotones = new javax.swing.JPanel();
        lblIdEnvio = new javax.swing.JLabel();
        txtIdEnvio = new javax.swing.JTextField();
        btnBuscarFactura = new javax.swing.JButton();
        btnAnularVenta = new javax.swing.JButton();
        lblFecha = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Anulacion de Facturas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/eliminar_1.png"))); // NOI18N

        pnlDetalle.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Detalle Venta", "ID Producto", "Producto", "Precio", "Cantidad", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetalle);

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlBotones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIdEnvio.setText("Envio");

        txtIdEnvio.setToolTipText("Ingrese el numero de factura");

        btnBuscarFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/impresora.png"))); // NOI18N
        btnBuscarFactura.setText("Buscar Factura");
        btnBuscarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFacturaActionPerformed(evt);
            }
        });

        btnAnularVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/imagenes/ventas.png"))); // NOI18N
        btnAnularVenta.setText("Anular Venta");
        btnAnularVenta.setEnabled(false);
        btnAnularVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularVentaActionPerformed(evt);
            }
        });

        lblFecha.setText("Fecha");

        lblTotal.setText("Total");

        txtFecha.setEnabled(false);

        txtTotal.setEnabled(false);

        lblId.setText("ID Venta");

        txtId.setEnabled(false);

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblIdEnvio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(txtIdEnvio))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblId)
                    .addComponent(lblTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(txtTotal))
                .addGap(18, 18, 18)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAnularVenta, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(btnBuscarFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(394, Short.MAX_VALUE))
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarFactura)
                    .addComponent(txtIdEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdEnvio)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(lblFecha)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnularVenta))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        lblIdEnvio.getAccessibleContext().setAccessibleName("Factura");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDetalle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnularVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularVentaActionPerformed

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        java.sql.Date fechaConvertida = null;

        String fecha_fac = null;
        
        try {
            Date hoy = dateFormat.parse(txtFecha.getText());
            fecha_fac = (1900 + hoy.getYear()) + "-" + (hoy.getMonth() + 1) + "-" + hoy.getDate();
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }

        try {
            Date fecha = new Date();
            String fecha_hoy = (1900 + fecha.getYear()) + "-" + (fecha.getMonth() + 1) + "-" + fecha.getDate();
            //Mensaje.manipulacionExcepciones("informacion", "Hoy: " + fecha_hoy);
            //Mensaje.manipulacionExcepciones("informacion", "Hoy: " + fecha_fac);
            if (fecha_fac.equals(fecha_hoy)) {
                AnularFactura();
            } else {
                Mensaje.manipulacionExcepciones("informacion", "No se puede anular facturas de otra fecha");
            }
        } catch (Exception e) {
            Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al verificar la fecha");
            Mensaje.manipulacionExcepciones("critico", e.getMessage());
        }
        
    }//GEN-LAST:event_btnAnularVentaActionPerformed

    private void AnularFactura() {
        
        AccesoAnulacionFacturas factura = new AccesoAnulacionFacturas();

        // Cambio el estado de la factura de Cancelado a Anulado
        factura.CambiarEstadoFactura(Integer.parseInt(txtId.getText()));

        // Reviso que la factura tenga algo en el detalle
        if (listaFacturas.isEmpty()) {
            // Si no se encontraron registros en el detalle de la factura muestro una alerta
            Mensaje.manipulacionExcepciones("critico", "El detalle de la factura se encuentra vacio");
        } else {
            // Si hubiesen registros en el detalle para esa factura entra aca

            // RECORRO LA ISTA
            for (ObjetosAnulacionFacturas xFacturas : listaFacturas) {

                String vId_producto = xFacturas.getId_producto();
                float vCantidad_producto_en_factura = xFacturas.getCant_d_factura();

                try {
                    // Actualizo en el inventario la existenacia por cada producto
                    factura.DevuelveAlInventario(vId_producto, vCantidad_producto_en_factura);

                } catch (Error error) {
                    btnAnularVenta.setEnabled(false);
                    Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al devolver la mercaderia al inventario -> " + error);
                }
            }
            btnAnularVenta.setEnabled(false);
            Mensaje.manipulacionExcepciones("informacion", "Factura anulada exitosamente");
        }
    } 
    
    private void btnBuscarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFacturaActionPerformed

        if(verificarDatosEntrada()){
            
            // GUARDO EN VARIABLES LOS DATOS DE LA FACTURA A BUSCAR
            int envio = Integer.parseInt(txtIdEnvio.getText());
            
            
            System.out.println("Los datos a buscar son: " + envio);
            
            DefaultTableModel tabla = new DefaultTableModel();
            
            AccesoAnulacionFacturas factura = new AccesoAnulacionFacturas();
            
            //ArrayList<ObjetosAnulacionFacturas> listaFacturas = new ArrayList();+++
            
            try{
                listaFacturas = factura.BuscarFactura(envio);
                
            }catch(Error error){
                Mensaje.manipulacionExcepciones("critico", "Ocurrio un error al consultar la informacion -> " +error);
            }
            
            // MOSTRAR LA INFORMACION DE LA LISTA
            if(listaFacturas.isEmpty()){
                Mensaje.manipulacionExcepciones("critico", "No existen facturas almacenadas con este numero de envio");
                txtIdEnvio.setText("");
            }else{
                tabla.addColumn("ID Detalle Venta");
                tabla.addColumn("ID Producto");
                tabla.addColumn("Producto");
                tabla.addColumn("Precio");
                tabla.addColumn("Cantidad");
                tabla.addColumn("Subtotal");
                
                int cFactura = 0;
                int contadorFilas = 1;
                
                // RECORRO LA ISTA
                for(ObjetosAnulacionFacturas xFacturas : listaFacturas){
                    tabla.setRowCount(contadorFilas);
                    
                    tabla.setValueAt(xFacturas.getId_d_factura(), cFactura, 0);
                    tabla.setValueAt(xFacturas.getId_producto(), cFactura, 1);
                    tabla.setValueAt(xFacturas.getMarca_producto(), cFactura, 2);
                    tabla.setValueAt(xFacturas.getPrecio_venta_d_factura(), cFactura, 3);
                    tabla.setValueAt(xFacturas.getCant_d_factura(), cFactura, 4);
                    tabla.setValueAt(xFacturas.getSubTotal_factura(), cFactura, 5);
                    
                    vFechaVenta = xFacturas.getFecha_emision_factura();
                    vTotal = String.valueOf(xFacturas.getTotal_factura());
                    vIdVenta = String.valueOf(xFacturas.getId_factura());
                    
                    txtFecha.setText(vFechaVenta);
                    txtTotal.setText(vTotal);
                    txtId.setText(vIdVenta);
                    
                    cFactura++;
                    contadorFilas++;
                }
                tblDetalle.setModel(tabla);
                btnAnularVenta.setEnabled(true);
            }
        }   
    }//GEN-LAST:event_btnBuscarFacturaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnularVenta;
    private javax.swing.JButton btnBuscarFactura;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIdEnvio;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JTable tblDetalle;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdEnvio;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
